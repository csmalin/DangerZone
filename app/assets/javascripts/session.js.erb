// App Objects
var app         = {};
app.cache       = {};
app.map         = {};
app.map.geo     = {};
app.map.layers  = {};
app.observer    = {};
app.view        = {};
app.crimes      = {};

// Default cache values
app.cache.crimeData       = [];
app.cache.showLayer       = {'all-crimes': true,
                             'heat-map': false,
                             'arson': false,
                             'assault': false,
                             'burglary': false,
                             'disorderly-conduct': false,
                             'drug-narcotic': false,
                             'drunkenness': false,
                             'extortion': false,
                             'kidnapping': false,
                             'larceny-theft': false,
                             'other-offenses': false,
                             'prostitution': false,
                             'robbery': false,
                             'sex-offenses': false,
                             'suspicious-activity': false,
                             'trespass': false,
                             'vandalism': false,
                             'vehicle-theft': false,
                             'weapon-laws': false};
app.cache.markerData      = [];
app.cache.googleData      = new google.maps.MVCArray([]);
app.cache.googleLocation  = new google.maps.LatLng(37.765, -122.437);

// Default Map configs
app.map.container       = 'map';
app.map.currentLocation = {lat: 37.765, lng: -122.437};

app.map.options = {
  zoom:             18,
  center:           app.cache.googleLocation,
  disableDefaultUI: true,
  zoomControl:      true,
  mapTypeControlOptions: {
    mapTypeIds: [google.maps.MapTypeId.ROADMAP, 'styled_map']
  }
}

app.map.styles = [
  {
    "featureType": "road.arterial",
    "elementType": "geometry.fill",
    "stylers": [
      {"hue":    "#aaff00"},
      {"color":  "#ffffff"},
      {"weight": 3}
    ]
  },{
    "featureType": "road.arterial",
    "elementType": "geometry.stroke",
    "stylers": [
      {"color":  "#d2d2d0"},
      {"weight": 2}
    ]
  },{
    "featureType": "road.arterial",
    "elementType": "labels.text.fill",
    "stylers": [
      {"color": "#ffffff"}
    ]
  },{
    "featureType": "road.arterial",
    "elementType": "labels.text.stroke",
    "stylers": [
      {"color":  "#bcbbba"},
      {"weight": 1.9}
    ]
  }
];

//Initialize Application
app.initialize = function() {
  app.map.initialize();
  app.observer.initialize();
}

//Initialize map
app.map.initialize = function() {
  var that = this;
  that.createMap();
  that.geo.getLocation();
  that.layers.initialize();
}

//Initialize DOM listiners
app.observer.initialize = function() {
  var that = this;
  that.dropDown('div.layers', 'open');
  that.searchFormToggle('div.search img', 'open');
  that.searchLocationForm('form.location-search');
  that.layerToggle();
  app.observer.updateLocation();
}

//////////////////////////////////////////////////////////////// Map
// Create google map
app.map.createMap = function(){
  var that               = this;
  that.styledMap         = new google.maps.StyledMapType(that.styles, {name: "Styled Map"});
  that.Map               = new google.maps.Map(document.getElementById(that.container), that.options);

  that.Map.mapTypes.set('styled_map', that.styledMap);
  that.Map.setMapTypeId('styled_map');

  that.setMarker('http://i.imgur.com/FOqzufV.png');
}

// Filter crime point layer visibility on map
app.map.showLayers = function(){
  var that = this;
  if(app.cache.showLayer['heat-map']){
    that.layers.heatMap.setMap(that.Map);
  } else {that.layers.heatMap.setMap(null)}

  for(m in app.cache.markerData){
    app.cache.markerData[m].setVisible(false);

    if(app.cache.showLayer['arson']){
      if(app.cache.markerData[m].category == 'ARSON'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['assault']){
      if(app.cache.markerData[m].category == 'ASSAULT'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['burglary']){
      if(app.cache.markerData[m].category == 'BURGLARY'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['disorderly-conduct']){
      if(app.cache.markerData[m].category == 'DISORDERLY CONDUCT'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['drug-narcotic']){
      if(app.cache.markerData[m].category == 'DRUG/NARCOTIC'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['drunkenness']){
      if(app.cache.markerData[m].category == 'DRUNKENNESS'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['extortion']){
      if(app.cache.markerData[m].category == 'EXTORTION'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['kidnapping']){
      if(app.cache.markerData[m].category == 'KIDNAPPING'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['larceny-theft']){
      if(app.cache.markerData[m].category == 'LARCENY/THEFT'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['other-offenses']){
      if(app.cache.markerData[m].category == 'OTHER OFFENSES'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['prostitution']){
      if(app.cache.markerData[m].category == 'PROSTITUTION'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['robbery']){
      if(app.cache.markerData[m].category == 'ROBBERY'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['sex-offenses']){
      if(app.cache.markerData[m].category == 'SEX OFFENSES, FORCIBLE' || app.cache.markerData[m].category == 'SEX OFFENSES, NON FORCIBLE'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['suspicious-activity']){
      if(app.cache.markerData[m].category == 'SUSPICIOUS OCC'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['trespass']){
      if(app.cache.markerData[m].category == 'TRESPASS'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['vandalism']){
      if(app.cache.markerData[m].category == 'VANDALISM'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['vehical-theft']){
      if(app.cache.markerData[m].category == 'VEHICLE THEFT'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['weapon-laws']){
      if(app.cache.markerData[m].category == 'WEAPON LAWS'){app.cache.markerData[m].setVisible(true);}
    }

    if(app.cache.showLayer['all-crimes']){
      if (app.cache.markerData[m].threat_level > 0){app.cache.markerData[m].setVisible(true);}
    }
  }
}

// Filter crime point layer visibility on map
app.map.showLayers = function(){
  var that = this;
  if(app.cache.showLayer['heat-map']){
    that.layers.heatMap.setMap(that.Map);
  } else {that.layers.heatMap.setMap(null)}

  for(m in app.cache.markerData){
    app.cache.markerData[m].setIcon('http://i.imgur.com/NiUEh6y.png');//1
    app.cache.markerData[m].setVisible(false);

    if(app.cache.showLayer['arson']){
      if(app.cache.markerData[m].category == 'ARSON'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/g1bWMVp.png');//2
      }
    }

    if(app.cache.showLayer['assault']){
      if(app.cache.markerData[m].category == 'ASSAULT'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/fp6LumH.png');//3
      }
    }

    if(app.cache.showLayer['burglary']){
      if(app.cache.markerData[m].category == 'BURGLARY'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/Uhiqbq5.png');//4
      }
    }

    if(app.cache.showLayer['disorderly-conduct']){
      if(app.cache.markerData[m].category == 'DISORDERLY CONDUCT'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/2pOTBUl.png');//5
      }
    }

    if(app.cache.showLayer['drug-narcotic']){
      if(app.cache.markerData[m].category == 'DRUG/NARCOTIC'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/deh9k5i.png');//6
      }
    }

    if(app.cache.showLayer['drunkenness']){
      if(app.cache.markerData[m].category == 'DRUNKENNESS'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/cJZEvHB.png');//7
      }
    }

    if(app.cache.showLayer['extortion']){
      if(app.cache.markerData[m].category == 'EXTORTION'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/RU1t0kx.png');////8
      }
    }

    if(app.cache.showLayer['kidnapping']){
      if(app.cache.markerData[m].category == 'KIDNAPPING'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/GC7mJqp.png');////9
      }
    }

    if(app.cache.showLayer['larceny-theft']){
      if(app.cache.markerData[m].category == 'LARCENY/THEFT'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/ZShLQYe.png');////10
      }
    }

    if(app.cache.showLayer['other-offenses']){
      if(app.cache.markerData[m].category == 'OTHER OFFENSES'){
        app.cache.markerData[m].setVisible(true);}
        app.cache.markerData[m].setIcon('http://i.imgur.com/MBB9OV1.png');////11
    }

    if(app.cache.showLayer['prostitution']){
      if(app.cache.markerData[m].category == 'PROSTITUTION'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/1Nixyq5.png');////12
      }
    }

    if(app.cache.showLayer['robbery']){
      if(app.cache.markerData[m].category == 'ROBBERY'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/fp6LumH.png');//13
      }
    }

    if(app.cache.showLayer['sex-offenses']){
      if(app.cache.markerData[m].category == 'SEX OFFENSES, FORCIBLE' || app.cache.markerData[m].category == 'SEX OFFENSES, NON FORCIBLE'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/qlMyckr.png');//14
      }
    }

    if(app.cache.showLayer['suspicious-activity']){
      if(app.cache.markerData[m].category == 'SUSPICIOUS OCC'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/1xXnhSE.png');//15
      }
    }

    if(app.cache.showLayer['trespass']){
      if(app.cache.markerData[m].category == 'TRESPASS'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/BociXKX.png');//16
      }
    }

    if(app.cache.showLayer['vandalism']){
      if(app.cache.markerData[m].category == 'VANDALISM'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/tTjqZej.png');//17
      }
    }

    if(app.cache.showLayer['vehicle-theft']){
      if(app.cache.markerData[m].category == 'VEHICLE THEFT'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/XVoccPj.png');//18
      }
    }

    if(app.cache.showLayer['weapon-laws']){
      if(app.cache.markerData[m].category == 'WEAPON LAWS'){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/DjA3GW5.png');//19
      }
    }

    if(app.cache.showLayer['all-crimes']){
      if (app.cache.markerData[m].threat_level > 0){
        app.cache.markerData[m].setVisible(true);
        app.cache.markerData[m].setIcon('http://i.imgur.com/YYmI526.png');//20
      }
    }
  }
}

// Updata map layers data points
app.map.updateData = function(data){
  var that = this;
  var crimes = data;
  app.cache.crimeData.push(data);

  for (x in crimes) {
    var marker = new google.maps.Marker({
      position: new google.maps.LatLng(crimes[x].latitude, crimes[x].longitude),
      map: that.Map,
      clickable: false,
      threat_level: crimes[x].threat_level,
      category: crimes[x].category
    });

    if (crimes[x].threat_level == 2) {
      marker.setIcon('http://i.imgur.com/FoyytFo.png');
      app.cache.googleData.push({location: new google.maps.LatLng(crimes[x].latitude, crimes[x].longitude), weight: 3});
    } else if (crimes[x].threat_level == 1){
      marker.setIcon('http://i.imgur.com/oevL0gi.png');
      app.cache.googleData.push({location: new google.maps.LatLng(crimes[x].latitude, crimes[x].longitude), weight: 1});
    } else {
       marker.setIcon('http://i.imgur.com/oevL0gi.png');
       marker.setVisible(false);
    }
    app.cache.markerData.push(marker);
  }
}

app.crimes.getSafetyScore = function(date,data) {
  console.log("GetSafeScore Called");
  var sum_distance_threat = 0;
  var sum_time_threat =0;
  var sum_priority_threat = 0;
  var priority_count = 0;
  var time_count = 0;
  var distance_count= 0;
  var weights = {"1":50, "2":100};
  var minutes = (date.getHours()*60) + date.getMinutes();
  var crimes = data;
  for (x in crimes) {
    var crime = crimes[x];

    var distance = app.map.geo.CalcDistanceBetween(app.map.currentLocation.lat,app.map.currentLocation.lng,parseFloat(crime.latitude),parseFloat(crime.longitude));

    if(distance >=0 && distance <= 0.2){
      //TODO add priorities
      var distance_threat_score = (-200*distance) + 100;
      sum_distance_threat += distance_threat_score;
      distance_count+=1;
    }

    var timeDiff = minutes - crime.time;
    console.log("Minutes is:"+minutes)
    console.log("Crime time is:" + crime.time)

    // console.log("timediff:"+timeDiff)
    if (timeDiff < 0 && timeDiff >= -60){
      //TODO add priorities
      var time_threat_score = (1.66666666666*timeDiff) + 100;
      sum_time_threat += time_threat_score;
      time_count += 1;

    }  else if (timeDiff >= 0  && timeDiff <= 60) {
     var time_threat_score = (-1.66666666666*timeDiff) + 100;
     sum_time_threat += time_threat_score;
     time_count += 1;
   }

   if(weights[String(crime.threat_level)]){
    sum_priority_threat += weights[String(crime.threat_level)];
    priority_count += 1;
  }
}
var time_avg = 0;
var distance_avg =0;
var priority_avg = 0;
if(time_count > 0){
  time_avg = sum_time_threat/time_count;
  console.log("sum_time_threat:"+sum_time_threat)
}
if(distance_count > 0){
  distance_avg = sum_distance_threat/distance_count;
}
if(priority_count > 0){
  priority_avg = sum_priority_threat/priority_count;
}
var threat_score = (time_avg + distance_avg + priority_avg)/3;

console.log("time avg:"+time_avg)
console.log("distance avg:"+distance_avg)
console.log("priority avg:"+priority_avg)
console.log("threat score:"+ threat_score);
return threat_score;
}

app.map.geo.CalcDistanceBetween = function(lat1,lon1,lat2,lon2){
  var p1 = new google.maps.LatLng(lat1,lon1);
  var p2 = new google.maps.LatLng(lat2,lon2);

  return this.calcDistance(p1,p2);
}

app.map.geo.calcDistance = function(p1,p2){
  return ((google.maps.geometry.spherical.computeDistanceBetween(p1, p2)).toFixed(2))/1000 *  0.621371;
}
// Set a location marker on new map
app.map.setMarker = function(url) {
  var that        = this;
  var date        = new Date();

  that.geoMarker  = new google.maps.Marker({
    position: app.cache.googleLocation,
    map:      that.Map,
    title:    'Your geolocation',
    icon:     url
  });
}

app.map.setLocation = function(lat, lng) {
  var that = this;
  app.cache.googleLocation = new google.maps.LatLng(lat,lng);
  that.currentLocation.lat = lat;
  that.currentLocation.lng = lng;
}

app.map.updateLocation = function() {
  var that = this;
  that.Map.setCenter(app.cache.googleLocation);
  that.Map.setZoom(18);
  that.geoMarker.setPosition(app.cache.googleLocation);
  var date = new Date();
  app.crimes.getSafetyData(date);
  console.log("In update location");

 }

 app.crimes.getSafetyData = function(date) {
  var lat = app.map.currentLocation.lat;
  var lng = app.map.currentLocation.lng;

  $.getJSON('/crimes?max_distance='+0.50+'&min_distance='+0+'&location='+lat+', '+lng, function(data) {
     var crimes = data;
     var safety_score = app.crimes.getSafetyScore(date,crimes);


      if(safety_score <= 10 && safety_score >= 0) {//dog
        app.map.geoMarker.setIcon('http://i.imgur.com/5BydPNx.jpg')
    } else if (safety_score > 10 && safety_score <=70) { //rat
        app.map.geoMarker.setIcon('http://i.imgur.com/TNEw4gQ.jpg')
    } else {
        app.map.geoMarker.setIcon('http://i.imgur.com/k6vIygX.jpg') //cat
    }
  });
 }


// Map Layers
app.map.layers.initialize = function() {
  app.map.layers.createHeatMap();
  //app.map.layers.createPointMap();
}

// Heat map layer
app.map.layers.createHeatMap = function(){
  var that        = this;
  that.heatMap    = new google.maps.visualization.HeatmapLayer({ data: app.cache.googleData });

  var gradient = [
     'rgba(255, 235, 10, 0)',
     'rgba(255, 235, 10, 1)',
     'rgba(255, 222, 10, 1)',
     'rgba(255, 177, 10, 1)',
     'rgba(255, 141, 10, 1)',
     'rgba(255, 96, 10, 1)',
     'rgba(255, 55, 10, 1)',
     'rgba(255, 39, 10, 1)'
   ];
  that.heatMap.setOptions({gradient: gradient, radius: 15, opacity: 0.9, maxIntensity: 80});
}
app.crimes.initialize = function() {
  app.map.updateLocation();
  app.crimes.getData(0, 0.25, 0, app.map.currentLocation.lat, app.map.currentLocation.lng);
  app.map.createLayers();
}

//////////////////////////////////////////////////////////////// Geolocation
app.map.geo.getLocation = function() {
  var that = this;
  navigator.geolocation.requestCurrentPosition(that.successCallback, that.errorCallback, that.timeoutCallback, 2000);
}

app.map.geo.successCallback = function(pos) {
  var that = this;
  var lat = pos.coords.latitude;
  var lng = pos.coords.longitude;

  app.map.setLocation(lat, lng);
  app.map.updateLocation();
  app.crimes.getData(0, 0.5, 0,app.map.currentLocation.lat,app.map.currentLocation.lng);
}

app.map.geo.timeoutCallback = function(){
  app.view.formOpen();
  app.view.flash("Enter your location!", "warning");
  app.map.updateLocation();
  app.crimes.getData(0, 0.5, 0,app.map.currentLocation.lat,app.map.currentLocation.lng);
}

app.map.geo.errorCallback = function(error){
  app.map.updateLocation();
  app.crimes.getData(0, 0.5, 0,app.map.currentLocation.lat,app.map.currentLocation.lng);

  if(error.PERMISSION_DENIED){
    app.view.flash("Enable your Geo Location!", "alert");
  } else if(error.POSITION_UNAVAILABLE){
    app.view.flash("Enter a location!", "alert");
  } else if(error.TIMEOUT){
    app.view.flash("hmmm we timed out trying to find where you are hiding!", "alert");
  }
}

// Get geolocation from client
navigator.geolocation.requestCurrentPosition = function(successCB, errorCB, timeoutCB, timeoutThreshold){
  var successHandler = successCB;
  var errorHandler   = errorCB;
  var timeout        = timeoutThreshold || 4000;

  window.geolocationTimeoutHandler = function(){timeoutCB();}

  window['geolocationRequestTimeoutHandler'] = setTimeout('geolocationTimeoutHandler()', timeout);

  if (typeof(geolocationRequestTimeoutHandler) != 'undefined'){
    clearTimeout(window['geolocationRequestTimeoutHandler']);
  }

  navigator.geolocation.getCurrentPosition(
    function(position){
      clearTimeout(window['geolocationRequestTimeoutHandler']);
      successHandler(position);
    },
    function(error){
      clearTimeout(window['geolocationRequestTimeoutHandler']);
      errorHandler(error);
    },{enableHighAccuracy: true});
};

//////////////////////////////////////////////////////////////// Crime Data
// Data radius chunks
app.crimes.range = [{ min: 0   ,max: 0.5 },
                     { min: 0.5 ,max: 1   },
                     { min: 1   ,max: 1.5 },
                     { min: 1.5 ,max: 2   },
                     { min: 2   ,max: 2.5 },
                     { min: 2.5 ,max: 3   },
                     { min: 3   ,max: 3.5 },
                     { min: 3.5 ,max: 4   },
                     { min: 4   ,max: 4.5 },
                     { min: 4.5 ,max: 5   },
                     { min: 5   ,max: 5.5 },
                     { min: 5.5 ,max: 6   },
                     { min: 6   ,max: 6.5 },
                     { min: 6.5 ,max: 7   },
                     { min: 7   ,max: 7.5 }];

// Get data from server
  app.crimes.getData = function(minDistance, maxDistance, counter,lat,lng) {
    var that    = this;
    console.log(counter);
    $.getJSON('/crimes?max_distance='+maxDistance+'&min_distance='+minDistance+'&location='+lat+', '+lng, function(data) {
      var date = new Date();
      var crimes = data;

      if (counter === 0) {
        app.crimes.changeSafetyMarker(date,crimes)
      }

      if (counter <= (that.range.length - 1)) {
        that.getData(that.range[counter].min, that.range[counter].max, (counter+1),lat,lng);
        app.map.updateData(crimes);
      }
    });
  }

  app.crimes.changeSafetyMarker = function(date,crimes) {

    var safety_score = app.crimes.getSafetyScore(date,crimes)

    if(safety_score <= 10 && safety_score >= 0) {
        app.map.geoMarker.setIcon('http://i.imgur.com/5BydPNx.jpg')
    } else if (safety_score > 10 && safety_score <70) { //yellow
        app.map.geoMarker.setIcon('http://i.imgur.com/TNEw4gQ.jpg')
    } else {
        app.map.geoMarker.setIcon('http://i.imgur.com/k6vIygX.jpg') //red
    }
  }


//////////////////////////////////////////////////////////////// DOM Observers
// Dropdown click handler
app.observer.dropDown = function(target, cssClass){
  $(target).click(function(event){
      $(this).toggleClass(cssClass);
  });
}
app.observer.updateLocation = function(){
  $('.current-location').click(function(){
    console.log('clicked');
    app.map.updateLocation();
  });
}
// Search form click handler
app.observer.searchFormToggle = function(target, cssClass) {
  $(target).click(function(){
    $(this).parent().toggleClass(cssClass);
  });
}
// Search from submit handler
app.observer.searchLocationForm = function(target){
  $(target).on('submit', function(event){
    event.preventDefault();
    var data = $(this).serialize();

    $.getJSON('/geocoder?'+data, function(data){
      var pos = data.pos.split(" ");
      var lat = pos[1];
      var lng = pos[0];

      app.map.setLocation(lat, lng)
      app.map.updateLocation();
      app.view.formClose();

    }, function(error){
      app.view.alertFlash(error.message);
    });

  });
}


app.observer.layerToggle = function(){
  $('li').click(function(event){
    event.stopPropagation();
    var elem = event.target;

    if ($(elem).attr('class') == 'active'){
      $(elem).removeClass('active');
      app.cache.showLayer[$(elem).attr('id')] = false;
    } else if($(elem).attr('class') != 'active') {
      $(elem).addClass('active');
      app.cache.showLayer[$(elem).attr('id')] = true;
    }

    app.map.showLayers();
  });
}


//////////////////////////////////////////////////////////////// Views
app.view.flash = function(message, type){
  $('.flash').addClass(type).text(message);

  window.setTimeout(function(){
    $('.flash').removeClass(type);
  }, 4000);
}

app.view.formOpen = function(){
  $('div.search').addClass('open');
}

app.view.formClose = function(){
  $('div.search').removeClass('open');
}

// Start Application
$(document).ready(function(){
  app.initialize();
});

$.fn.toggleClick=function(){
  var functions = arguments
  return this.click(function(){
    var iteration=$(this).data('iteration')||0
  //  console.log(iteration)
    functions[iteration].apply(this,arguments)
    iteration= (iteration+1) %functions.length
    $(this).data('iteration',iteration)
  })
}
